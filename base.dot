digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_instance.tf_aws_vm_01" [label = "aws_instance.tf_aws_vm_01", shape = "box"]
		"[root] aws_security_group.subnetsecurity" [label = "aws_security_group.subnetsecurity", shape = "box"]
		"[root] aws_subnet.subnet1" [label = "aws_subnet.subnet1", shape = "box"]
		"[root] aws_subnet.subnet2" [label = "aws_subnet.subnet2", shape = "box"]
		"[root] aws_vpc.environment-example-two" [label = "aws_vpc.environment-example-two", shape = "box"]
		"[root] azurerm_resource_group.tf-test-rg1" [label = "azurerm_resource_group.tf-test-rg1", shape = "box"]
		"[root] azurerm_subnet.TFVirtualsubnet1" [label = "azurerm_subnet.TFVirtualsubnet1", shape = "box"]
		"[root] azurerm_subnet.TFVirtualsubnet2" [label = "azurerm_subnet.TFVirtualsubnet2", shape = "box"]
		"[root] azurerm_virtual_network.TF_Virtual_Network" [label = "azurerm_virtual_network.TF_Virtual_Network", shape = "box"]
		"[root] data.aws_ami.ubuntu" [label = "data.aws_ami.ubuntu", shape = "box"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] provider.azurerm" [label = "provider.azurerm", shape = "diamond"]
		"[root] var.aws_access_key" [label = "var.aws_access_key", shape = "note"]
		"[root] var.aws_region" [label = "var.aws_region", shape = "note"]
		"[root] var.aws_secret_key" [label = "var.aws_secret_key", shape = "note"]
		"[root] var.azurerm_client_id" [label = "var.azurerm_client_id", shape = "note"]
		"[root] var.azurerm_client_secret" [label = "var.azurerm_client_secret", shape = "note"]
		"[root] var.azurerm_subscription_id" [label = "var.azurerm_subscription_id", shape = "note"]
		"[root] var.azurerm_tenant_id" [label = "var.azurerm_tenant_id", shape = "note"]
		"[root] var.vsphere_password" [label = "var.vsphere_password", shape = "note"]
		"[root] var.vsphere_server" [label = "var.vsphere_server", shape = "note"]
		"[root] var.vsphere_user" [label = "var.vsphere_user", shape = "note"]
		"[root] aws_instance.tf_aws_vm_01" -> "[root] aws_subnet.subnet2"
		"[root] aws_instance.tf_aws_vm_01" -> "[root] data.aws_ami.ubuntu"
		"[root] aws_security_group.subnetsecurity" -> "[root] aws_vpc.environment-example-two"
		"[root] aws_subnet.subnet1" -> "[root] aws_vpc.environment-example-two"
		"[root] aws_subnet.subnet2" -> "[root] aws_vpc.environment-example-two"
		"[root] aws_vpc.environment-example-two" -> "[root] provider.aws"
		"[root] azurerm_resource_group.tf-test-rg1" -> "[root] provider.azurerm"
		"[root] azurerm_subnet.TFVirtualsubnet1" -> "[root] azurerm_virtual_network.TF_Virtual_Network"
		"[root] azurerm_subnet.TFVirtualsubnet2" -> "[root] azurerm_virtual_network.TF_Virtual_Network"
		"[root] azurerm_virtual_network.TF_Virtual_Network" -> "[root] azurerm_resource_group.tf-test-rg1"
		"[root] data.aws_ami.ubuntu" -> "[root] provider.aws"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_instance.tf_aws_vm_01"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group.subnetsecurity"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_subnet.subnet1"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] azurerm_subnet.TFVirtualsubnet1"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] azurerm_subnet.TFVirtualsubnet2"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.vsphere_password"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.vsphere_server"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.vsphere_user"
		"[root] provider.aws (close)" -> "[root] aws_instance.tf_aws_vm_01"
		"[root] provider.aws (close)" -> "[root] aws_security_group.subnetsecurity"
		"[root] provider.aws (close)" -> "[root] aws_subnet.subnet1"
		"[root] provider.aws" -> "[root] var.aws_access_key"
		"[root] provider.aws" -> "[root] var.aws_region"
		"[root] provider.aws" -> "[root] var.aws_secret_key"
		"[root] provider.azurerm (close)" -> "[root] azurerm_subnet.TFVirtualsubnet1"
		"[root] provider.azurerm (close)" -> "[root] azurerm_subnet.TFVirtualsubnet2"
		"[root] provider.azurerm" -> "[root] var.azurerm_client_id"
		"[root] provider.azurerm" -> "[root] var.azurerm_client_secret"
		"[root] provider.azurerm" -> "[root] var.azurerm_subscription_id"
		"[root] provider.azurerm" -> "[root] var.azurerm_tenant_id"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider.aws (close)"
		"[root] root" -> "[root] provider.azurerm (close)"
	}
}

